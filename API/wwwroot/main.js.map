{"version":3,"sources":["./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_models/UserParams.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_directives/has-role.directive.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_service/confirm.service.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_service/members.service.ts","./src/app/errors/test-error/test-error.component.ts","./src/app/errors/test-error/test-error.component.html","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_service/account.service.ts","./src/app/_models/Pagination.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_service/message.service.ts","./src/app/_service/presence.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_service/admin.service.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_service/busy.service.ts","./src/app/_service/paginationhelper.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/modals/role-modals/role-modals.component.ts","./src/app/modals/role-modals/role-modals.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  colorTheme = 'theme-green';\n  @Input() label: string;\n  @Input() maxDate: Date;\n  bsConfig: Partial<BsDatepickerConfig>;\n  constructor(@Self() public ngControl: NgControl) { \n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: this.colorTheme , \n      dateInputFormat: \"DD MMMM YYYY\"\n    }\n  }\n\n  writeValue(obj: any): void {\n   // throw new Error('Method not implemented.');\n  }\n  registerOnChange(fn: any): void {\n   // throw new Error('Method not implemented.');\n  }\n  registerOnTouched(fn: any): void {\n   // throw new Error('Method not implemented.');\n  }\n  // setDisabledState?(isDisabled: boolean): void {\n  //   throw new Error('Method not implemented.');\n  // }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"form-group\">\n    <input type=\"text\" \n    class=\"form-control\"\n    [class.is-invalid] = \"ngControl.touched && ngControl.invalid \"\n    [formControl] = 'ngControl.control'\n    placeholder = {{label}}\n    bsDatepicker\n    [bsConfig] = 'bsConfig'\n    [maxDate] = 'maxDate'\n    \n    >\n    <div class=\"invalid-feedback\"\n    *ngIf = \"ngControl.control.errors?.required\">\n    {{label}} is required\n    </div>\n</div>\n","import { Component, Input, OnInit, Output , EventEmitter   } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../_service/account.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  //models: any = {};\n  @Output() canceRegister = new EventEmitter<boolean>();\n  registerForm: FormGroup;\n  // nhận lỗi trả về từ Interceptor\n  // nếu không khởi tạo đối tượng sẽ  nhẫn lỗi Undefiend do có kiểm tra validationErrors.length > 0\n  // khong co doi tuong lam sao co do dai lengthh\n  validationErrors: string[] = []; \n  maxDate: Date;\n  constructor(\n    private accountService: AccountService , \n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private router: Router \n    ) { }\n\n  ngOnInit(): void {\n  this.intitializeForm();\n  this.maxDate = new Date();\n  this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n  }\n  \n  register() {\n   this.accountService.register(this.registerForm.value).subscribe((user) => {\n    // console.log(user);\n    //this.cance();\n    this.router.navigateByUrl(\"/members\");\n   } , error => {\n     this.validationErrors = error; // Interceptor sẽ trả về Lỗi nếu nó xảy ra\n      // console.log(error);\n      // this.toastr.error(error.error);\n    });\n  }\n  cance() {\n    this.canceRegister.emit(false);\n  }\n  intitializeForm() {\n    this.registerForm = this.fb.group({\n      gender:[\"male\"],\n      username:[\"\" , Validators.required],\n      knownAs:[\"\" , Validators.required],\n      dateOfBirth:[\"\" , Validators.required],\n      city:[\"\" , Validators.required],\n      country:[\"\" , Validators.required],\n      password: ['' , [Validators.required , Validators.minLength(4) , Validators.maxLength(8)]],\n      confirmPassword: ['' , [Validators.required , this.matchValues('password')]]\n     });\n  }\n  matchValues(matchTo: string) : ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value == control?.parent?.controls[matchTo].value? null : {isMatching: true}\n    }\n  }\n}\n","<!-- <form #registerForm = \"ngForm\" (ngSubmit) = \"register()\">\n    <h2 class=\"text-center text-primary\">\n        SignUp\n    </h2>\n    <hr>\n    <div class=\"form-group\">\n        <input type=\"text\" \n        name=\"username\" \n        placeholder=\"username\" \n        class=\"form-control\"\n        [(ngModel)] = \"models.username\">\n    </div>\n\n    <div class=\"form-group\">\n        <input type=\"password\" \n        name=\"password\" \n        class=\"form-control\"\n        [(ngModel)] = \"models.password\"\n        placeholder=\"password\">\n    </div>\n    <div class=\"form-group text-center\">\n        <button class=\"btn btn-success mr-2\" type=\"submit\"> Register </button>\n        <button class=\"btn btn-defau lt mr-2\" type=\"button\" (click) = \"cance()\"> Cance </button>\n    </div>\n</form> -->\n\n<form [formGroup] = \"registerForm\" (ngSubmit) = \"registerForm.valid && register()\" autocomplete=\"off\">\n    <h2 class=\"text-center text-primary\">\n        SignUp\n    </h2>\n    <hr>\n\n    <div class=\"form-group\">\n        <label class=\"control-label\" style=\"margin-right:10px\">I am a : </label>\n        <label class=\"radio-inline\">\n            <input type=\"radio\" formControlName=\"gender\" value=\"male\"> Male\n        </label>\n        <label class=\"radio-inline\">\n             <input type=\"radio\" formControlName=\"gender\" value=\"female\" class = \"ml-2\"> Female\n        </label>\n    </div>\n\n    <app-text-input \n                    [formControl] = 'registerForm.controls[\"username\"]' \n                    [label] ='\"username\"' > \n    </app-text-input>\n\n    <app-text-input \n    [formControl] = 'registerForm.controls[\"knownAs\"]' \n    [label] ='\"knownAs\"' > \n\n    </app-text-input>\n    <app-date-input \n    [maxDate] = \"maxDate\"\n    [formControl] = 'registerForm.controls[\"dateOfBirth\"]' \n    [label] ='\"dateOfBirth\"'> \n    </app-date-input>\n\n    <app-text-input \n    [formControl] = 'registerForm.controls[\"city\"]' \n    [label] ='\"city\"' > \n    </app-text-input>\n\n    <app-text-input \n    [formControl] = 'registerForm.controls[\"country\"]' \n    [label] ='\"country\"' > \n    </app-text-input>\n\n  \n\n    <app-text-input \n                    [formControl] = 'registerForm.controls[\"password\"]' \n                    [label] ='\"Password\"' \n                    [type] = '\"password\"'>\n    </app-text-input>\n    <app-text-input \n                    [formControl] = 'registerForm.controls[\"confirmPassword\"]' \n                    [label] ='\"confirmPassword\"' \n                    [type] = '\"password\"'>\n    </app-text-input>\n\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n              this is error :  {{error}}\n            </li>\n        </ul>\n    </div>\n    <div class=\"form-group text-center\">\n        <button [disabled] = \" ! registerForm.valid\" class=\"btn btn-success mr-2\" type=\"submit\"> Register </button>\n        <button class=\"btn btn-defau lt mr-2\" type=\"button\" (click) = \"cance()\"> Cance </button>\n    </div>\n</form>\n<p> form value: {{registerForm.value | json}} </p>\n<p> form state: {{registerForm.status | json}} </p>","import {ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { take } from 'rxjs/operators';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from 'src/app/_service/message.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit  {\n  \n  //tao Input lay UserName tu Message detail component  \n \n   @Input() messages: Message[] = [];\n   @Input() username: string = \"\";\n   @ViewChild(\"messageForm\") public messageForm: NgForm;\n   messageContent:string; // tow way databiding [()] in html\n  \n  //constructor(private messageService: MessageService) {}\n  constructor(public messageService: MessageService) {} // chuyen thanh public de lấy trực tiếp bên html\n\n\n  ngOnInit(): void {\n    // this.messageService.messageThread$.subscribe(message => {\n    //   console.log(message);\n    // })\n  }\n  sendMessage() {\n    this.messageService.sendMessage(this.username , this.messageContent).then(() => {\n        //this.messages.push(message);     \n        this.messageForm.reset();\n      }\n    )\n  }\n \n}\n","<div class=\"card\">\r\n    <div class=\"card-body\"\r\n        #scrollMe\r\n        style=\"overflow: scroll; height: 535px;\"\r\n        [scrollTop]=\"scrollMe.scrollHeight\">\r\n        <!-- lấy từ API , giờ sẽ chuyển qua lấy từ service SignR -->\r\n        <!-- <div *ngIf=\"messages?.length === 0\">\r\n            No messages yet... say hi by using the message box below\r\n        </div> -->\r\n\r\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n            No messages yet... say hi by using the message box below\r\n        </div>\r\n\r\n        <ul #scrollMe\r\n            style=\"overflow: scroll; height: 500px\"\r\n            [scrollTop] = \"scrollMe.scrollHeight\"\r\n            *ngIf=\"(messageService.messageThread$ | async)?.length > 0\" \r\n            class=\"chat\">\r\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\r\n                <div> \r\n                    <span class=\"chat-img float-right\">\r\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \r\n                            alt=\"{{message.senderUsername}}\">\r\n                    </span>\r\n                    <div class=\"chat-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\">{{message?.messageSent || timeago}}</span>\r\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (unread)\r\n                                </span>\r\n                                <span class=\"text-success\" *ngIf=\"message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (read {{message.dateRead | timeago}})\r\n                                </span>\r\n                            </small>\r\n                        </div>\r\n                        <p>{{message.content}}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\"  autocomplete=\"off\" (ngSubmit) = \"sendMessage()\">\r\n            <div class=\"input-group\">\r\n                <input \r\n                    name=\"messageContent\"\r\n                    type=\"text\" \r\n                    class=\"form-control input-sm\" \r\n                    placeholder=\"Send a private message\"\r\n                    [(ngModel)]=\"messageContent\"\r\n                    >\r\n                <div class=\"input-group-append\">\r\n                    <button [disabled] = \"!messageForm.valid\" class=\"btn btn-primary\" type=\"submit\">\r\n                        Send\r\n                        <i class=\"fa fa-spinner fa-spin\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div> \r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not Found</h1>\n    <button class=\"btn-info\" routerLink=\"/\" > return to home page </button>\n</div>","import { User } from \"./user\";\r\n\r\nexport class UserParams {\r\n    gender: string;\r\n    minAge:number =  18;\r\n    maxAge: number = 99;\r\n    pageNumber: number = 1;\r\n    pageSize: number =  2;\r\n    orderBy:string = \"lastActive\" ;\r\n    constructor(user:  User) {\r\n        // gia tri mac dinh\r\n        this.gender = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n\n  error: any;\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state.error;\n    \n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\n<ng-container *ngIf=\"error\">\n    <h5 class='text-danger'>Error: {{error.message}}</h5>\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\n    <p>What to do next?</p>\n    <ol>\n        <li>Open the chrome dev tools</li>\n        <li>Inspect the network tab</li>\n        <li>Check the failing request</li>\n        <li>Examine the request URL - make sure it is correct</li>\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\n    </ol>\n    <p>Following is the stack trace - this is where your investigation should start!</p>\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\n</ng-container>","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_service/account.service';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() appHasRole: string[];\n  user: User;\n  constructor(private viewContainerRef: ViewContainerRef, \n    private templateRef: TemplateRef<any>, \n    private accountService: AccountService) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n        this.user = user;\n     //   console.log(\"Step1\");\n      })\n     }\n\n  ngOnInit(): void {\n  //  console.log(\"Step2\");\n    // clear view if no roles\n    if (!this.user?.roles || this.user == null) {\n    //  console.log(\"not role\");\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if (this.user?.roles.some(r  => this.appHasRole.includes(r))) {\n    //  console.log(\"có role admin\");\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n    //  console.log(\"có role nhung ko co admin\");\n      this.viewContainerRef.clear();\n    }\n  }\n}\n\n// coi lai phan update state directive \n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public registerMode: boolean = false;\n  constructor(private http: HttpClient) { }\n  ngOnInit(): void {\n  }\n  public registerToggle(): void {\n    this.registerMode = !this.registerMode;\n  }\n  canceRegister(event) {\n    this.registerMode = event;\n  }\n}\n","<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" style=\"text-align:center\">\n        <h1>Find Your Match</h1>\n        <p class = \"lead\"> Come on in to view your matches... all you need to do is sign up! </p>\n        <div class=\"text-center\">\n            <button (click) = \"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\"> Register </button>\n            <button class=\"btn btn-info btn-lg\"> Learn More </button>\n        </div> \n    </div>\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <app-register (canceRegister) = \"canceRegister($event)\" > </app-register>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModalRef: BsModalRef;\n  constructor(private modalService: BsModalService) {}\n  confirm(title: string =  \"Confirmation\" ,  \n          message: string = \"Are you sure you want to do  this ?\",\n          btnOkText = \"Ok\",\n          btnCanceText = \"Cance\"): Observable<boolean>\n          {\n            const config = {\n              initialState: {\n                title , \n                message ,\n                btnOkText , \n                btnCanceText\n              }\n            }\n            // this.bsModalRef = this.modalService.show('confirm' , config);\n            this.bsModalRef = this.modalService.show(ConfirmDialogComponent , config);\n    return new Observable<boolean>(this.getResult()); // \n  }\n// 4:10\n    // viết ra 1 Observable để truyền biến Result có thể dụng bên trong mọi Component\n  private getResult() {\n      return (observer) => {\n        // khi model đóng thì phát ra 1 Evenemitter\n          const subscription = this.bsModalRef.onHidden.subscribe(() => {\n            // sau truyền Thành công Value (true hoặc false) thì sẽ complete và hủy unsubscribe\n            observer.next(this.bsModalRef.content.result);\n            observer.complete();\n          })\n          return {\n            unsubscribe() {\n              subscription.unsubscribe();\n            }\n          }\n      }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false , \n  apiUrl: \"https://localhost:5001/api/\" , \n  hubUrl: \"https://localhost:5001/hubs/\",\n  hieu: \"https://localhost:5001/hubs/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_service/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  currentUser: User;\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.currentUser = user);\n    if(this.currentUser) \n    {\n      request = request.clone({\n        setHeaders: {\n            Authorization: `Bearer ${this.currentUser.token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","\nimport {Component, OnDestroy, OnInit } from '@angular/core';\nimport {ToastrService } from 'ngx-toastr';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/Pagination';\nimport { ConfirmService } from '../_service/confirm.service';\nimport { MessageService } from '../_service/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit , OnDestroy  {\n\n  // messages:Message[];\n  // pageNumber: number = 1;\n  // pageSize: number = 5;\n  // container: string = \"Unread\"; // đây là mặc định ở server\n  // pagination: Pagination;\n  // isloading = false;\n  private subscription: Subscription;\n  messages: Message[] ;\n\n  pagination: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n  mysubject: any;\n\n  constructor(\n    private messageService: MessageService ,    \n    private confirmService: ConfirmService  \n    ) { }\n\n\n    ngOnInit(): void {\n      this.loadMessages();\n    }\n  // loadMessage() {\n  //   this.isloading = true;\n  //   this.messageService.getMesage(this.pageNumber , this.pageSize , this.container)\n  //   .subscribe(response => {\n  //     this.pagination = response.pagination;\n  //     this.messages =  response.result;\n  //     this.isloading = false;\n  //   })\n  // }\n  loadMessages() {\n    this.loading = true;\n    this.messageService.getMesage(this.pageNumber, this.pageSize, this.container).subscribe(response => {\n      this.messages = response.result;\n     // this.mySubjectMessage.next(this.messages);\n      this.pagination = response.pagination;\n      this.loading = false;\n      \n    })\n  }\n  // deleteMessage(id: number) {\n\n  //    // this.toast.success(\" delete successful\"+ id );\n  //     //slice tra ve 1  mang tu chi so index den .leng\n  //     //const animals = ['ant', 'bison', 'camel', 'duck', 'elephant']\n  //     //animals.slice(2)\n  //   // expected output: Array [\"camel\", \"duck\", \"elephant\"]\n    \n  //   this.confirm.confirm(\"confirm\" , \"are you sure delete?\").subscribe((result) => {\n  //     if(result) {\n  //       this.messageService.deleteMessage(id).subscribe(() => {\n  //         this.messages.slice(this.messages.findIndex(m => m.Id ===  id) , 1);\n  //          console.log(\"message : \");\n  //          console.log(this.messages);\n  //       });\n  //     }\n  //   })\n  // }\n  // pageChange(event: any) {\n  //   this.pageNumber = event.page;\n  //   this.loadMessage();\n  // }\n  deleteMessage(id: number) {\n    \n    // this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(result => {\n    //   if (result) {\n    //     // this.messageService.deleteMessage(id).subscribe(() => {          \n    //     //   this.messages.splice(this.messages.findIndex(m => m.Id === id) , 1);  \n    //     //   console.log(this.messages);       \n    //     // })\n    //   }\n    // })\n   this.mysubject = this.messageService.deleteMessage(id).subscribe(() => {          \n       this.messages.splice(this.messages.findIndex(m => m.id === id) , 1);  \n      // this.loadMessages();\n      //this.messages = this.messages.filter(x => x.Id !== id);\n    })\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n  ngOnDestroy(): void {\n   // this.subscription.unsubscribe();\n  }\n  // ko dung ko sao\n  trackMessage(index , message) {\n    console.log(message);\n    return message ? message.id : undefined;\n  }\n}\n","<!-- <div *ngFor = \"let message of messages\">\n    {{message.content}}\n</div> -->\n\n<!-- <div class=\"row mp4\">\n    <div class=\"btn-group\" name=\"container\">\n        <button class=\"btn btn-primary\" btnRadio=\"Unread\" [(ngModel)]=\"container\" (click)=\"loadMessage()\">\n            <i class=\"fa fa-envelope\"></i> Unread\n        </button>\n\n        <button class=\"btn btn-primary\" btnRadio=\"Inbox\" [(ngModel)]=\"container\" (click)=\"loadMessage()\">\n            <i class=\"fa fa-envelope-open\"></i> Inbox\n        </button>\n        <button class=\"btn btn-primary\" btnRadio=\"Outbox\" [(ngModel)]=\"container\" (click)=\"loadMessage()\">\n            <i class=\"fa fa-paper-plane\"></i> Outbox\n        </button>\n    </div>\n</div> -->\n\n<div class=\"row mb-4\">\n    <div class=\"btn-group\" name='container'>\n        <button class=\"btn btn-primary\" btnRadio='Unread' [(ngModel)]=\"container\" \n            (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope\"></i> Unread\n        </button>\n        <button class=\"btn btn-primary\" btnRadio='Inbox' [(ngModel)]=\"container\" \n            (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope-open\"></i> Inbox\n        </button>\n        <button class=\"btn btn-primary\" btnRadio='Outbox' [(ngModel)]=\"container\" \n            (click)=\"loadMessages()\">\n            <i class=\"fa fa-paper-plane\"></i> Outbox\n        </button>\n    </div>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\n    <h3> No Message</h3>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\n    <table class=\"table table-hover\">\n        <tr>\n            <th style=\"width: 40%\">Message</th>\n            <th style=\"width: 20%\">From / To</th>\n            <th style=\"width: 20%\">Sent / Received</th>\n            <th style=\"width: 20%\"></th>\n        </tr>\n        <!--container thay doi thanh Inbox , Outbox theo [(ngModel)] cua button -->\n        <tr [hidden]=\"loading\" *ngFor=\"let message of messages ; trackBy: trackMessage\" \n                routerLink='{{ container === \"OutBox\" \n                       ? \"/members / \" + message.recipientUsername \n                       : \"/members/\" + message.senderUsername }}'[queryParams]='{tab:3}' >\n            <td> {{message.content}} </td>\n            <td>\n                <div *ngIf=\"container === 'Outbox'\">\n                    <img class=\"img-circle rounded-circle mr-2\" [src]=\"message.recipientPhotoUrl || './asset.user.png' \"\n                        alt=\"message.recipientUsername\">\n                    <strong> {{message.recipientUsername}} </strong>\n                </div>\n\n                <div *ngIf=\"container !== 'Outbox'\">\n                    <img class=\"img-circle rounded-circle mr-2\" src=\"{{message.senderPhotoUrl || './asset.user.png' }}\"\n                        alt=\"message.senderUsername\">\n                    <strong> {{message.senderUsername}} </strong>\n                </div>\n            </td>\n            <td> {{message.messageSend | timeago}} </td>\n            \n            <td>\n                <button (click)=\"$event.stopPropagation()\" \n                (click)=\"deleteMessage(message.id)\" \n                class='btn btn-danger'>Delete</button>\n            </td>\n        </tr>\n    </table>\n\n    <div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !isloading \">\n        <pagination [boundaryLinks]=\"true\" \n            [totalItems]=\"pagination.totalItems\" \n            [itemsPerPage]=\"pagination.itemsPerPage\"\n            [(ngModel)]=\"pagination.currentPage\" \n            (pageChanged)=\"pageChanged($event)\" \n            previousText=\"&lsaquo;\"\n            nextText=\"&rsaquo;\" \n            firstText=\"&laquo;\" \n            lastText=\"&raquo;\">\n        </pagination>\n    </div>\n</div>","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection } from '@microsoft/signalr';\nimport { Observable, of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport {Member} from '../_models/member';\nimport {MemberUpdate} from '../_models/memberUpdate';\nimport { PaginatedResult } from '../_models/Pagination';\nimport { User } from '../_models/user';\nimport { UserParams } from '../_models/UserParams';\nimport { AccountService } from './account.service';\nimport { getPaginationHeaders, getPaginationResult } from './paginationhelper';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n\n  // HttpOptions = {\n  //   headers : new HttpHeaders ({\n  //     Authorization: 'Bearer '+ JSON.parse(localStorage.getItem('user'))?.token\n  //   })\n  // }\n  memberCache = new Map();\n  members: Member[] = [];\n  baseUrl: string = environment.apiUrl;\n  user: User;\n  userParams: UserParams;\n\n\n  // tạo ra class và Interface \n  // interface có các property giống y chang Header sẽ nhận từ Response.header.get('Pagination')\n  // class<T> là tập kết quả nhận đc thỏa với điều kiện đc trả về từ Server api router\n\n  constructor(private http: HttpClient , private accountService: AccountService ) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    })\n   }\n\n  getMembers(userParams: UserParams) {\n    // // khi mà Mảng Member co dữ liệu thi khong can goi ve API nữa\n    // if(this.members.length  > 0 ) return of(this.members);\n    // // khi mà mảnh members khong co du lieu thi quay ve Api lay\n    // CACHE dữ liệu\n    let userParamValue = Object.values(userParams).join('-');\n    var response = this.memberCache.get(userParamValue);  \n    // neu co response thi tra ve tu day , khong co thi tra ve tu server sau do luu vao cache\n    if(response) return of(response);\n\n    let params = getPaginationHeaders(userParams.pageNumber , userParams.pageSize);\n    params = params.append(\"minAge\" , userParams.minAge.toString());\n    params = params.append(\"maxAge\" , userParams.maxAge.toString());\n    params = params.append(\"gender\" , userParams.gender);\n    params = params.append(\"OrderBy\" , userParams.orderBy);\n    return getPaginationResult<Member[]>(this.baseUrl + \"users\" , params , this.http)\n               .pipe(map(response => {\n                this.memberCache.set(userParamValue , response); \n                return response;\n               }));\n  }\n\n\n\n  getMember(username: string): Observable<Member> {\n\n    // const member =  this.members.find(x => x.username == username);\n    // if(member !== undefined) // neu co member\n    // return of(member);\n    // // nguoc lại ko co member thi quay ve goi API\n    const member = [...this.memberCache.values()]\n                   .reduce((arr , elem) => arr.concat(elem.result) , [] ) // return ve 1 mảng Cache\n                   .find((member: Member) => {\n                    if(member.username === username)\n                    return member.username;\n                   } );\n   \n     if(member) {\n      return of(member);\n     }\n    return this.http.get<Member>(this.baseUrl + \"users/\" + username);\n  }\n  updateMember(member: Member) {\n   return this.http.put(this.baseUrl + \"users\" , member).pipe(\n     map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n     })\n   )\n  }\n\n\n  getUserParam() {\n    // duoc tao tren Contructor\n    return this.userParams;\n  }\n  setUserParam(param: UserParams) {\n    this.userParams = param;\n  }\n  resetUserParam() {\n    // user lay tren Contructor\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n  setMainPhoto(photoId: number) {\n    // return ve mot  new UserDto gom {\n                //Username = user.UserName , \n              //  Token = this._tokenService.CreateToken(user),\n             //   photoUrl = user.Photos.FirstOrDefault(x => x.IsMain)?.Url\n          //  };\n    return this.http.put(this.baseUrl + \"users/set-main-photo/\" + photoId , {});\n  }\n  deletePhoto(photoId: number) {\n    return this.http.delete(this.baseUrl + \"users/delete-photo/\"+photoId);\n  }\n\n  addLike(username: string) {\n    return this.http.post(this.baseUrl + \"likes/\" + username , {});\n  }\n  getLike(predicate: string , pageNumber: number , pageSize:number) {\n    // predicate=\" + predicate truyền trực tiếp trên câu Query\n    let params = getPaginationHeaders(pageNumber , pageSize);\n    // định nghĩa giá trị tham số Prediacate\n    params = params.append('predicate' , predicate); // noi params vao trong header\n    //params = params.append('iloveyou' , 'pac pac');\n    return getPaginationResult<Partial<Member[]>>(this.baseUrl + \"likes\" , params , this.http);\n    // return this.http.get<Partial<Member[]>>(this.baseUrl + \"likes?predicate=\" + predicate);\n  } // 2:27\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-error',\n  templateUrl: './test-error.component.html',\n  styleUrls: ['./test-error.component.css']\n})\nexport class TestErrorComponent implements OnInit {\n\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log(response);\n    }, error => {\n    })\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n    })\n  }\n\n}\n","<ng-container>\n    <button class=\"btn btn-outline-primary mr-3\" (click) = \"get400Error()\"> get 400 </button>\n    <button class=\"btn btn-outline-primary mr-3\" (click) = \"get500Error()\"> get 500 </button>\n    <button class=\"btn btn-outline-primary mr-3\" (click) = \"get401Error()\"> get 401 </button>\n    <button class=\"btn btn-outline-primary mr-3\" (click) = \"get404Error()\"> get 404 </button>\n    <button class=\"btn btn-outline-primary mr-3\" (click) = \"get400ValidationError()\"> get400ValidationError </button>\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\n        <ul class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\">\n              this is error :  {{error}}\n            </li>\n        </ul>\n    </div>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport {NgxGalleryModule} from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule , \n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right' \n    }),\n    BsDropdownModule.forRoot(),\n    TabsModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n  ],\n  exports : [\n    ToastrModule ,\n    BsDropdownModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {\n                const modalStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key])\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof(error.error) === 'object') {\n                this.toastr.error(error.statusText, error.status);\n              } else if(error.error === 'object') {\n                this.toastr.error(error.error, error.status);\n              } else {\n                this.toastr.error(error.error , error.status); \n              }\n\n              break;\n            case 401:\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n  }\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, of  } from 'rxjs';\nimport {map } from 'rxjs/operators';\nimport { AccountService } from '../_service/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService ,private toast: ToastrService){}\n  canActivate(): Observable<boolean> {\n    const checkUserRole = this.accountService.currentUser$.pipe(\n    map(user => {\n      if(user.roles.includes(\"Admin\") || user.roles.includes(\"Moderator\"))\n      {\n        return true;\n      }\n      this.toast.error(\"You cannot enter this area\");\n    })\n    );\n\n    return checkUserRole;\n  }\n  \n}\n","import { TemplateRef } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RoleModalsComponent } from 'src/app/modals/role-modals/role-modals.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_service/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n\n  constructor(private adminService: AdminService ,  private modalService: BsModalService) { }\n  users: Partial<User[]> = [];\n  bsModalRef: BsModalRef;\n  ngOnInit(): void {\n    this.getUserWithRole();\n  }\n  getUserWithRole() {\n    this.adminService.getuserWithRole().subscribe(users => {\n      this.users = users;\n    //  console.log(users);\n    })\n  }\n\n  openRoleModals(user: User) {\n    const config = {\n    class: \"modal-dialog-centered\" , \n    initialState : {\n      user , \n      roles: this.getCurrentRoleArray(user) //  [{name: \"Admin\" , value: \"Admin\" , true or false}]\n    }};\n    this.bsModalRef = this.modalService.show(RoleModalsComponent, config);    \n    // khi click Button Update của Component Model thi nó phát ra 1 evenEmitter\n    // thông báo cho các lớp subscribe nó rằng ĐÃ CÓ SỰ KIỆN \n    \n    this.bsModalRef.content.updateSelectedRoles.subscribe(value =>{\n    //  console.log(value);\n      const roleToUpdate = {\n        roles: [...value.filter(el => el.checked === true).map(el => el.name)]\n      }\n      if(roleToUpdate) {\n        this.adminService.updateUserRole(user.username , roleToUpdate.roles).subscribe(() => {\n          user.roles = [...roleToUpdate.roles];\n        });\n      }\n    });\n    \n    // tra về cho component Role Modals một content\n    //this.bsModalRef.content.closeBtnName = 'Close';\n  } \n  getCurrentRoleArray(user: User) {\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRole:Irole[] = [\n      {name: \"Admin\" , value: \"Admin\"},\n      {name: \"Moderator\" , value: \"Moderator\"},\n      {name: \"Member\" , value: \"Member\"}\n    ];\n    availableRole.forEach(role => {\n      let isMatch = false;\n        for(const userRole of userRoles) {\n          if(role.name === userRole) {\n            isMatch = true;\n            role.checked = true; // true false của select\n            roles.push(role);\n            break; // thoat khoi vong for\n          }\n        }\n        if(!isMatch) {\n          role.checked = false;\n          roles.push(role);\n        }\n    });\n    return roles;\n  }\n}\n\ninterface  Irole {\n   name?: string;\n   value?: string;\n   checked?: boolean;\n}","<div>\n    <table class=\"table\">\n        <tr>\n            <th style=\"width:30%\">UserName</th>\n            <th style=\"width:40%\">Active Role</th>\n            <th style=\"width:30%\"></th>\n        </tr>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.username | titlecase}}</td>\n            <td>{{user.roles}}</td>\n           \n            <td><btton class=\"btn btn-info\" (click) = \"openRoleModals(user)\" >Edit Role</btton></td>\n        </tr>\n    </table>\n</div>\n","import {  Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Message } from 'src/app/_models/message';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_service/account.service';\nimport { MembersService } from 'src/app/_service/members.service';\nimport { MessageService } from 'src/app/_service/message.service';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit , OnDestroy {\n  @ViewChild(\"memberTabs\" , {static: true}) memberTabs: TabsetComponent;\n  activeTab: TabDirective;\n  messages: Message[] = [] ; // neu khong khoi tao se nhan error khi truy xuat message.length\n  member: Member ;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  paramSelectTab: number = -1;\n  user: User;\n  constructor(private memberService: MembersService , \n    private route:ActivatedRoute ,\n    private messageService: MessageService,\n    private acccountService: AccountService , \n    private router: Router\n    ) {\n        this.acccountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n        // không lưu lại cache của router , vi vây khi Hub gửi message Angular sẽ làm mới router\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n     }\n  ngOnInit(): void {\n  \n    this.route.data.subscribe(data => {\n      //resolve: {member: MemberDetailedResolver} trong app.routing.module.ts\n      this.member = data.member; // member sẽ lấy trước khi contructor khoi tao template\n    });\n\n    this.route.queryParams.subscribe(params => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    });\n   // this.loadMember();\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }]\n      this.galleryImages = this.getImage();\n  }\n  getImage(): NgxGalleryImage[] {\n    const imgUrls = [];\n    for(const photo of this.member.photos) {\n      imgUrls.push({\n        small: photo?.url ,\n        medium: photo?.url,\n        big: photo?.url\n      })\n    }\n    return imgUrls;\n  }\n onTabActivated(data: TabDirective) {\n    this.activeTab = data;\n    // nếu Tag là message thì Load Messsign từ SingR\n    if(this.activeTab.heading === \"Messages\" && this.messages.length === 0 ) {\n      // load message từ Api\n      // this.loadMessage(); \n      //load Message từ Singl R\n      this.messageService.createHubConnection(this.user , this.member.username);\n    }\n    else \n    { \n      this.messageService.stopHubConnection(); \n    }\n\n  }\n  loadMessage() {\n    this.messageService.getMessageThread(this.member.username).subscribe(message => {\n      this.messages = message;      \n    })\n  }\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n  // khi không activite Tag thì phải hủy Conection của SignR\n  ngOnDestroy(): void {\n    this.messageService.stopHubConnection();\n  }\n}\n","<div class=\"row\" >\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div class=\"mb-2\"  >\n                    <i class=\"fa fa-user-circle text-success\"></i> Online now\n                </div>\n                <div>\n                    <strong>Location:</strong>\n                    <p>{{member.city}}, {{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Age:</strong>\n                    <p>{{member.age}}</p>\n                </div>\n                <div>\n                    <strong>Last Active:</strong>\n                    <p>{{member.lastActive | timeago}}</p>\n                </div>\n                <div>\n                    <strong>Member since:</strong>\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"btn-group d-flex\">\n                    <button class=\"btn btn-primary\">Like</button>\n                    <button (click)=\"selectTab(3)\"  class=\"btn btn-success\">Message</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\"  #memberTabs><!-- #memberTabs Reference template avaiable-->\n            <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\n                <h4>Description</h4>\n                <p>{{member.introduction}}</p>\n                <h4>Looking for</h4>\n                <p>{{member.lookingFor}}</p>\n            </tab>\n            <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\n                <h4>Interests</h4>\n                <p>{{member.interests}}</p>\n            </tab>\n            <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" \n                style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\n            </tab>\n            <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\n                <app-member-messages [username] = \"member.username\"></app-member-messages>\n                <!-- sẽ ko lấy message từ đây , chúng ta sẽ lấy trực tiếp từ SignR nen bỏ [messages] = \"messages\" -->\n                 <!-- <app-member-messages [messages] = \"messages\" [username] = \"member.username\"  ></app-member-messages> -->\n            </tab>\n        </tabset>\n    </div>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_service/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n// CanActivate nếu nó là False , Route sẽ không được thông qua \nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService , private toastr: ToastrService) {}\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if(user)\n        return true;\n        \n        this.toastr.error(\"you can't take member\");\n      })\n    )\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { PresenceService } from './presence.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl; \n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient , private presence: PresenceService) { } // dung httpClient de thuc hien viec Request CURD den server  \n  // model se chua username va password khi chung ta gui request\n  // account : controller ; \n  // login : HttpPost(\"login\") \n  login(model: any) {\n  return this.http.post(this.baseUrl + \"account/login\" , model).pipe(\n    map((response: User ) => {\n      const user = response;\n      if(user) {\n      // localStorage.setItem(\"user\" , JSON.stringify(user));  \n      // this.currentUserSource.next(user);\n      this.setCurrentUser(user);\n      // SignalR Create connection\n      this.presence.createHubConnection(user);\n      }\n    }));\n  }\n\n  register(model : any) {\n   return this.http.post(this.baseUrl +\"account/register\" , model).pipe(\n      map((user: User) => {\n        if(user) {\n          // localStorage.setItem(\"user\" , JSON.stringify(user));\n          //this.currentUserSource.next(user);\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n        return user;\n      })\n    )\n  }\n\n  setCurrentUser(user: User) {\n   // if(!user) return\n\n    user.roles = []; // khai báo mảng rổng để nếu token tra về 1 chuổi thì ta biến nó thành 1 mảng\n    // \"role\": [\"Member\",\"Moderator\"] user.token.role , role nằm trong token  sau khi dc decodeToken\n    const roles = this.getDecodedToken(user.token).role;\n    // kiem tra xem Role là 1 chuỗi hay 1 mảng , nếu ko là mảng thì ta add nó vào mảng rỗng đã tạo\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    //JSON.stringify(user) chuyển user thành Json\n    localStorage.setItem(\"user\" , JSON.stringify(user));\n    this.currentUserSource.next(user); // currentUser$ sẽ có chứa User có token  bên trong luôn\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection()\n  }\n  getDecodedToken(token: string) { //  giải mã token và trả về 1 JSON \n      return JSON.parse(atob(token.split(\".\")[1])); // bỏ bean . và lấy hết token phái sau TRẢ VỀ Object\n  }\n}\n","export interface Pagination { // thu tu o day ko quan trong\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\nexport class PaginatedResult<T> {\r\n    result : T;\r\n    pagination: Pagination;\r\n}\r\n\r\n// // gán dữ liệu bằng \r\n// var PaginatedResult = new PaginatedResult();\r\n// PaginatedResult.result = [ {a : 1 , b: 2} , {a: 3 , b: 4}]","import { Component, OnInit } from '@angular/core';\nimport {MembersService} from '../../_service/members.service';\nimport {Member} from '../../_models/member';\nimport { Observable } from 'rxjs';\nimport {Pagination} from '../../_models/Pagination';\nimport { UserParams } from 'src/app/_models/UserParams';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_service/account.service';\nimport { take } from 'rxjs/operators';\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n\n  members: Member[];\n  pagination: Pagination;\n  userParams: UserParams;\n  user: User;\n  genderList = [{value: 'male' , display: 'Males'} , {value: 'female' , display: 'FeMales'}]\n  // pageNumber: number = 1;\n  // pageSize:number = 5;\n  constructor(private memberService: MembersService , private accountService: AccountService ) { \n    // this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n    //   this.user = user;\n    //   this.userParams = new UserParams(user);\n    // })\n    this.userParams =  this.memberService.getUserParam();\n  }\n  ngOnInit(): void {\n    this.loadMembers();\n  }\n  public loadMembers(): void {\n   // console.log(this.userParams);\n    // do UserParam la 1 Class , muon dung duoc ở đây phai khoi tao doi tuong new trong Contructor.\n    this.memberService.setUserParam(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(\n      response => {\n        this.members = response.result;\n        this.pagination = response.pagination;\n      }\n    )\n  }\n  resetFilters() {\n    // user dc khoi tao trogn constructor\n    this.userParams = this.memberService.resetUserParam();\n    this.loadMembers();\n  }\n  pageChanged(event: any) {\n    this.userParams.pageNumber  = event.page;\n    this.loadMembers();\n  }\n\n}\n","<div class=\"text-center mt-3\">\n<h2>Your Matches - {{pagination?.totalItems}} </h2>\n</div>\n<div class=\"container mt-3\">\n    <form class=\"form-inline mt-3\" autocomplete=\"off\" #f = \"ngForm\" (ngSubmit) = \"loadMembers()\">\n    <div class=\"form-group\">\n        <label> Age from : </label>\n        <input type=\"number\" class=\"form-control ml-1\"\n        style=\"width: 70px;\" name = \"minAge\"\n        [(ngModel)] = \"userParams.minAge\">\n    </div>\n    <div class=\"form-group\">\n        <label> Age to : </label>\n        <input type=\"number\" class=\"form-control ml-1\"\n        style=\"width: 70px;\" name = \"maxAge\"\n        [(ngModel)] = \"userParams.maxAge\">\n    </div>\n    <div class=\"form-group px-2\">\n        <label> Show : </label>\n        <select name=\"gender\"  \n        [(ngModel)]=\"userParams.gender\" \n        class=\"form-control ml-1\"\n        style=\"width: 130px\">\n            <option *ngFor = \"let gender of genderList\" class=\"form-control\"\n            [value] = \"gender.value\"  >\n            {{gender.display}}\n    </option>\n    </select>\n    </div>\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply filter</button>\n    <button class=\"btn btn-primary ml-1\" type=\"submit\" (click) = \"resetFilters()\">Reset</button>\n\n    <div class=\"col\">\n        <button type=\"button\" \n        btnRadio=\"lastActive\"\n        name = \"OrderBy\"\n        [(ngModel)]=\"userParams.orderBy\"\n        (click) = \"loadMembers()\"\n        class=\"btn btn-primary\" > Last Active </button>\n\n        <button type=\"button\" \n        btnRadio=\"created\"\n        name = \"OrderBy\"\n        [(ngModel)]=\"userParams.orderBy\"\n        (click) = \"loadMembers()\"\n        class=\"btn btn-primary\" > Newbie Member </button>\n    </div>\n    \n\n</form>\n</div>\n\n\n\n<div class=\"row\">\n    <div *ngFor=\"let member of members \" class=\"col-2\">\n        <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf = \"pagination\">\n    <pagination \n    [boundaryLinks]=\"true\"\n    [totalItems] = \"pagination.totalItems\"\n    [itemsPerPage] = \"pagination.itemsPerPage\"\n    [(ngModel)] = \"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\" \n    nextText=\"&rsaquo;\" \n    firstText=\"&laquo;\" \n    lastText=\"&raquo;\"\n    >\n</pagination>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { AccountService } from './_service/account.service';\nimport { PresenceService } from './_service/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'client App component';\n  constructor(private http: HttpClient , \n    private accountService: AccountService ,\n    private presence: PresenceService\n    ) {\n  } \n  ngOnInit(): void {\n    this.setCurrentUser();\n  }\n  setCurrentUser(){\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if(user)\n    {\n      this.accountService.setCurrentUser(user);      \n      this.presence.createHubConnection(user);\n    }\n  }\n}\n","<ngx-spinner\n  bdColor=\"rgba(0, 0, 0, 1)\"\n  template=\"<img src='https://media.giphy.com/media/o8igknyuKs6aY/giphy.gif' />\">\n</ngx-spinner>\n<app-nav> </app-nav>\n<div class=\"container\" style=\"margin-top: 100px;\">\n <router-outlet> </router-outlet>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_service/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy() ;\n    return next.handle(request).pipe(\n      delay(1000) ,\n      finalize(() => {\n        this.busyService.idle();\n      })\n    ) ;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\nimport { Toast, ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Group } from '../_models/group';\nimport { Message } from '../_models/message';\nimport { User } from '../_models/user';\nimport { getPaginationHeaders, getPaginationResult } from './paginationhelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  private hubConection: HubConnection; // dùng Private chặn connec từ bên ngoài\n\n\n  constructor(private http: HttpClient , private toast: ToastrService) { }\n  getMesage(pageNumber: number , pageSize: number , container) {\n    var params = getPaginationHeaders(pageNumber , pageSize); // param pagenumber va pagesize\n    params = params.append(\"container\" , container); // THEM Param mặc định container là Unread va2 httpParam\n    var message_And_Pagination_And_Params$  = getPaginationResult<Message[]>(this.baseUrl + \"messages\" ,  params , this.http);\n    return  message_And_Pagination_And_Params$;\n  }\n  getMessageThread(username: string) {\n    \n    return this.http.get<Message[]>(this.baseUrl + \"messages/thread/\" + username );\n  }\n\n  deleteMessage(id: Number) {\n    return this.http.delete(this.baseUrl + \"messages/\"+id);\n  }\n\n  createHubConnection(user:User , otherUsername: string) {\n    console.log(\"connection lai\");\n    // tạo k ết nối tới Hub\n    // this.busyService.busy();\n    this.hubConection = new HubConnectionBuilder()\n                        //.configureLogging(LogLevel.Debug)\n                        .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n                          accessTokenFactory: () => user.token\n                        }) \n                        .withAutomaticReconnect()\n                        .build();\n    this.hubConection.start().catch(error => console.log(error));    \n    \n    this.hubConection.on(\"ReceiveMessageThread\" , messages => {    \n      this.messageThreadSource.next(messages);  \n    });\n\n    // cập nhật tình trạng đã đọc khi 1 user connec vào\n    this.hubConection.on(\"UpdateGroup\" , (group) => {\n      // some chỉ cần trong mảng connection có otherUsername sẽ trả về true        \n      if(group.connections.some(x => x.username === otherUsername)) {\n        // lấy ra messages cũ từ Obsevable\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\n            messages.forEach(message => {\n              if(!message.dateRead) // nếu nó ko là kiểu Date type\n              {\n                message.dateRead = new Date(Date.now());\n              }              \n            });\n            this.messageThreadSource.next([...messages]);\n        });\n      }\n    });\n\n    // trả về 1 mang message cho Component (Cập nhật Message vào messageThreadSource)\n    this.hubConection.on(\"NewMessage\" , messageDTO => {\n      this.messageThread$.pipe(take(1)).subscribe(message => {\n          this.messageThreadSource.next([...message , messageDTO]);          \n      });\n    })\n\n  }\n  stopHubConnection() {\n    if(this.hubConection){\n      console.log(\"disconnec\");\n      this.hubConection.stop();\n    }\n  }\n  async sendMessage(username: string , content: string) {\n    // send message từ API\n    // return this.http.post<Message>(this.baseUrl + \"messages\" , {recipientUsername: username , content} )\n    \n    // send message từ Hub Message , gọi hàm CreateMessage từ HubMessage \n    // nó ko trả về Obsevable mà trả về Promise , vì vậy Http Interceptor ko bắt đc cái lỗi và phải Catch\n    return this.hubConection.invoke(\"CreateMessage\" , {recipientUsername: username , content} )\n                                  .catch(error => console.log(error));\n                                  \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\n// kiểm trả một người là Online hay không\nexport class PresenceService { \n  hubUrl = environment.hubUrl;\n  hubConnection: HubConnection; // goi trong Signalr\n  // new BehaviorSubject<string[]>([]);  chứa Mảng string những người đang online khở tạo là Rỗng\n  private userOnlineSource = new BehaviorSubject<string[]>([]);\n  // lấy dữ liệu UserOnlineSource khi nó next\n  onlineUser$ = this.userOnlineSource.asObservable();\n\n  constructor(private toast: ToastrService , private router: Router) { }\n  createHubConnection(user: User) {\n    // chúng ta ko thể sử dụng Token trong Header \n    // do đó phải tạo HubConnectionBuilder để sử dụng\n\n    this.hubConnection = new HubConnectionBuilder()\n    // địa chỉ API của this.hubUrl + \"presence\" được \n    // định nghĩa trong Startup.cs endpoints.MapHub<PresenceHub>(\"hubs/presence\");\n                          .withUrl(this.hubUrl + \"presence\" , {\n    // sử dụng token của user curent truyền như là QueryString cho Hub API\n    // //cấu hinh IdentityServiceExtension cho phép Client send Token\n                            accessTokenFactory: () => user.token \n                          })\n                          // khi có vấn đề về mạng , sẽ tự động kết nối lại cho Hub\n                          .withAutomaticReconnect()\n                          .build()\n    \n    //Start hubConnection khi Login và Register\n    this.hubConnection.start().catch(error => console.log(error));\n    \n    // listen \"UseOnlineMethod\"\n    //// username là danh sách những người đang online mới , ko bao gồm trong danh sách cũ\n    this.hubConnection.on(\"UserIsOnline\" , username => {   \n      // this.toast.info(username + \"had connected\");\n      // thay bằng cập nhật Username OnlineisOnlien trong PresentTrack\n      this.onlineUser$.pipe(take(1)).subscribe(usernames => { // messages là 1 array user đang online\n        // cập nhật lại ds người đang online khi họ có connection \n        this.userOnlineSource.next([...usernames , username]);\n      }) \n    });\n    this.hubConnection.on(\"UserIsOffline\" , username => {\n     //  this.toast.warning(username + \"had disconnected\");\n     this.onlineUser$.pipe(take(1)).subscribe(usernames => { // messages là 1 array user đang Offline\n      // cập nhật lại ds người đang online khi họ mất connection \n      // danh sách online sẽ còn lại những usernames(online) mà ko nằm trong bảng usernae (offline)\n      this.userOnlineSource.next([...usernames.find(x => x != username )]);\n    }) \n\n    })\n    // nó sẽ tự động kết nối với Presencehub.CS và gọi phương thức GetOnlineUsers\n    this.hubConnection.on(\"GetOnlineUsers\" , (username: string[]) => {\n        this.userOnlineSource.next(username);\n    } )\n\n    // hub.clients.clients sẽ liên kết với hàm on ở đây\n    this.hubConnection.on(\"NewMessageRecived\" , ({username , knownas}) => {\n      this.toast.info(username + \"had send a messages for you\" )\n                .onTap // trigger khi click vào Toast\n                .pipe(take(1))\n                .subscribe(() => this.router.navigateByUrl(\"/members/\" + username + \"?tab=3\"));\n    });\n    \n  }\n  stopHubConnection() {\n    this.hubConnection.stop().catch(error => console.log(error));\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';// tao form\n// import { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component'; // dropdown\n// import { ToastrModule } from 'ngx-toastr';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorComponent } from './errors/test-error/test-error.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RoleModalsComponent } from './modals/role-modals/role-modals.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RoleModalsComponent,\n    ConfirmDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    SharedModule,\n    NgxSpinnerModule ,\n    ReactiveFormsModule\n    \n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_service/account.service';\nimport { MembersService } from 'src/app/_service/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  \n  @Input() member: Member;\n  uploader: FileUploader;\n  hasBaseDropzoneOver = false;\n  baseUrl = environment.apiUrl;\n  user: User;\n  constructor(private accountService: AccountService, private memberService: MembersService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n  ngOnInit(): void {\n    this.initializeUploader();\n    console.log(this.member);\n  }\n  fileOverBase(e: any) { // error\n    this.hasBaseDropzoneOver = e;\n  }\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    }\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n        const photo:Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if(photo.isMain) {\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n  }\n    setIsMainPhoto(photo: Photo) {\n      this.memberService.setMainPhoto(photo.id).subscribe(\n        () => {\n          this.user.photoUrl = photo.url;      \n          this.accountService.setCurrentUser(this.user);   // cap nhat localStore gom Token , url , username\n          this.member.photoUrl = photo.url; // cap nhat url member\n          this.member.photos.forEach(p => {\n            // neu hien tai co isMain\n            if(p.isMain) p.isMain = false\n            if(p.id == photo.id) photo.isMain = true;\n          })\n        }\n      )\n    }\n    deletePhoto(photoId: number) {\n      this.memberService.deletePhoto(photoId).subscribe(() => {\n        // tra ve cho chung ta cai mang ko co cai photo bang photoId do\n        // vi vay chung ta ko phai cap nhat tai client\n       this.member.photos =  this.member.photos.filter(x =>x.id !== photoId);\n        //this.member.photos = this.member.photos.filter(x =>x.id == photoId);\n      })\n    }\n}\n","<div class=\"row\">\n    <div class=\"col-2\" *ngFor = \"let photo of member.photos\">\n        <img src=\"{{photo.url}}\" alt=\"photo.url\" class=\"img-thumbnail p-1\">\n        <div class=\"text-center\">\n            <button \n            [disabled] = \"photo.isMain\"\n            [ngClass] = 'photo.isMain ? \"btn-success active\" : \"btn-outline-success\" '\n            (click) = \"setIsMainPhoto(photo)\"\n            class=\"btn btn-sm\">Main</button>\n            \n            <button \n            [disabled] = \"photo.isMain\"\n            (click) = \"deletePhoto(photo.id)\"\n            class=\"btn btn-sm btn-danger\">\n            <i class=\"fa fa-trash\"></i></button>\n        </div>\n    </div>\n</div>\n\n<div class=\"row mt-3\">\n \n    <div class=\"col-md-3\">\n\n        <h3>Add Photos</h3>\n\n        <div ng2FileDrop\n             [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\n             (fileOver)=\"fileOverBase($event)\"\n             [uploader]=\"uploader\"\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n             <i class=\"fa fa-upload fa-3x\"></i>\n            Drop photos here\n        </div>\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th width=\"50%\">Name</th>\n                <th>Size</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of uploader.queue\">\n                <td><strong>{{ item?.file?.name }}</strong></td>\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n            </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress\" style=\"\">\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\"\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"fa fa-upload\"></span> Upload all\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                <span class=\"fa fa-ban\"></span> Cancel all\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                <span class=\"fa fa-trash\"></span> Remove all\n            </button>\n        </div>\n\n    </div>\n\n</div>\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { Member } from \"../_models/member\";\r\nimport { MembersService } from \"../_service/members.service\";\r\n\r\n// load dữ liệu trước Constructor\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> { \r\n    constructor(private memberService: MembersService) {}\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):  Observable<Member> {\r\n        // lay param member in app-routing\r\n        var usernameRouter = this.memberService.getMember(route.paramMap.get('username'));  \r\n        return usernameRouter;\r\n    }    \r\n}   ","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  baseUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n  getuserWithRole() {\n    // su dung Partial vi chi tra ve 1 phan cua User \n   return this.http.get<Partial<User[]>>(this.baseUrl + \"admin/users-with-roles\");\n  }\n\n  public updateUserRole(username: string , roles: any  ) {\n    return this.http.post(this.baseUrl + \"admin/edit-roles/\" + username + \"?roles=\"+roles , {});\n  } \n\n\n}\n","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n\n  @Input() label: string;\n  @Input() type =  \"text\";\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n   }\n  writeValue(obj: any): void {\n   // throw new Error('Method not implemented.');\n  }\n  registerOnChange(fn: any): void {\n   // throw new Error('Method not implemented.');\n  }\n  registerOnTouched(fn: any): void {\n   // throw new Error('Method not implemented.');\n  }\n  // setDisabledState?(isDisabled: boolean): void {\n  //   throw new Error('Method not implemented.');\n  // }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"form-group\">\n    <input type = {{type}} \n    [class.is-invalid]= \"ngControl.touched && ngControl.invalid\"\n    class=\"form-control\" \n    [formControl]=\"ngControl.control\" \n    placeholder = {{label}} >\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter {{label}}</div>\n    \n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\n        {{label}} must be at least {{ngControl.control.errors.minlength[\"requiredLength\"]}}\n    </div>\n\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\n        {{label}} must be at most {{ngControl.control.errors.maxlength[\"requiredLength\"]}}\n    </div>\n\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\n      Password do not match\n    </div>\n   \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/Pagination';\nimport { MembersService } from '../_service/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n\n  members: Partial<Member[]>;\n  predicate:string = \"liked\"; // default\n  pageNumber = 1;\n  pageSize = 2;\n  pagination: Pagination;\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLike();\n  }\n  loadLike() {\n    this.memberService.getLike(this.predicate , this.pageNumber , this.pageSize).subscribe(response => {\n      // response.result; du lieu lay trong response.body cua service\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLike();\n  }\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{predicate === 'liked' ? 'Member I Liked' :  'member who like me' }}</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"btn-group\" name = \"predicate\">\n            <button \n            class=\"btn btn-primary\"\n            [(ngModel)]=\"predicate\"\n            btnRadio = \"liked\"\n            (click) = \"loadLike()\">\n                Member I Like\n            </button>\n            <button \n            class=\"btn btn-primary\"\n            [(ngModel)]=\"predicate\"\n            btnRadio = \"likedBy\"\n            (click) = \"loadLike()\">\n                Member Who Like me\n            </button>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-2\" *ngFor = \"let member of members\" >\n            <app-member-card [member] = member></app-member-card>\n        </div>\n    </div>\n</div>\n<div class=\"d-flex justify-content-center\" *ngIf = \"pagination\">\n    <pagination \n    [boundaryLinks]=\"true\"\n    [totalItems] = \"pagination.totalItems\"\n    [itemsPerPage] = \"pagination.itemsPerPage\"\n    [(ngModel)] = \"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\" \n    nextText=\"&rsaquo;\" \n    firstText=\"&laquo;\" \n    lastText=\"&raquo;\"\n    >\n</pagination>\n</div>","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport {AccountService} from '../_service//account.service'\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit  {\n  \n  model: any = {};\n  f: boolean = true;\n  constructor(\n    public accountService: AccountService , \n    private router: Router,\n    private toastr: ToastrService\n    ) \n    { }\n \n\n  ngOnInit(): void {\n  \n  }\n  login () {\n    this.accountService.login(this.model).subscribe(response => {\n      this.f = true;\n      this.router.navigateByUrl('/members');     \n    });\n  }\n  logout() {\n    this.f = false;\n    this.accountService.logout();\n    this.router.navigateByUrl(\"/\");\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink = \"/\" routerLinkActive= \"active\">Dating App</a>\n    <!-- <ul class=\"navbar-nav mr-auto\" *ngIf = \"accountService.currentUser$|async\"> -->\n      <ul class=\"navbar-nav mr-auto\" >\n        <!-- KHONG SINH RA TAG HTML  -->\n        <ng-container *ngIf = \"accountService.currentUser$|async\" >\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink = \"/members\" routerLinkActive= \"active\">Match</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink = \"/lists\" routerLinkActive= \"active\">lists</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink = \"/messages\" routerLinkActive= \"active\" >Messages</a>\n          </li>\n        </ng-container>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink = \"/error\" routerLinkActive= \"active\" >Error</a>\n        </li>\n        <!-- *appHasRole = '[\"Admin\",\"Moderator\"]' -->\n        <!-- Neu bỏ *ngIf=\"f\" thi no se chay truoc khi chung ta nhấn login và nó sẽ ko có dữ liệu Role -->\n      <ng-container *ngIf=\"f\"> \n        <li *appHasRole='[\"Admin\", \"Moderator\"]' class=\"nav-item\" >  \n          <a class=\"nav-link\" routerLink = \"/admin\" routerLinkActive= \"active\" >Admin</a>\n        </li>\n      </ng-container>\n    </ul>\n\n    <div class=\"dropdown\"  *ngIf = \"accountService.currentUser$|async as user\" dropdown>\n      <img src=\"{{user.photoUrl || '../assets/user.png' }}\" alt=\"{{user.username}}\">\n      <a  dropdownToggle class=\"btn btn-primary dropdown-toggle\">\n        Wellcome {{user.knownAs || user.username | titlecase}}\n      </a>\n      <div class=\"dropdown-menu mt3\"  *dropdownMenu>\n        <a routerLink='/member/edit' class=\"dropdown-item\">Edit Profile</a>\n        <div class=\"divider dropdown-divider\"></div>\n        <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n      </div>\n    </div>\n    <form class=\"form-inline mt-2 mt-md-0\" *ngIf=\"(accountService.currentUser$|async) === null\" #navForm='ngForm' (ngSubmit)=\"login()\">\n\n      <input [(ngModel)]=\"model.username\" class=\"form-control mr-sm-2\" type=\"text\" name=\"username\"\n        placeholder=\"UserName\">\n\n      <input [(ngModel)]=\"model.password\" class=\"form-control mr-sm-2\" name=\"password\" type=\"password\"\n        placeholder=\"PassWord\">\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form>\n  </div>\n\n</nav>","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_service/members.service';\nimport { PresenceService } from 'src/app/_service/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  \n  @Input() member: Member;\n  \n  constructor(private memberService: MembersService , \n              private toastr: ToastrService , \n              public presenceService : PresenceService\n              ) {\n\n   }\n\n  ngOnInit(): void {\n\n  }\n  addLike(member: Member) {\n    this.memberService.addLike(member.username).subscribe(() => {\n      this.toastr.success(\"have you like \" + member.knownAs);\n    })\n  }\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img src=\"{{member.photoUrl }}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\"><button routerLink='/members/{{member.username}}' class=\"btn btn-primary\">\n                <i class=\"fa fa-user\"></i></button></li>\n            <li class=\"list-inline-item\" (click) = \"addLike(member)\">\n                <button class=\"btn btn-primary\">\n                <i class=\"fa fa-heart\"></i></button>\n            </li>\n                \n            <li class=\"list-inline-item\">\n                <button \n                    routerLink='/members/{{member.username}}' \n                    [queryParams]='{tab: 3}'\n                    class=\"btn btn-primary\">\n                <i class=\"fa fa-envelope\"></i>\n            </button></li>\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\">\n            <span [class.is-online] = \"(presenceService.onlineUser$ | async).includes(member.username)\" >\n                <i class=\"fa fa-user mr-2\"></i>\n                {{member.knownAs}}, {{member.age}} \n            </span>\n        </h6>\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService { // Icon Load ngxBootstrap Templaet\n\n  busyRequestCount = 0;\n  constructor(private spinnerService: NgxSpinnerService) { }\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined , {\n      type: \"ball-scale-multiple\" ,\n      bdColor: \"rgba(51,51,51,0.8)\",\n      color: \"#333333\"\n    })\n  }\n  idle() {\n    this.busyRequestCount--;\n    if(this.busyRequestCount <=0)\n    this.busyRequestCount = 0;\n    this.spinnerService.hide();\n  }\n\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginatedResult } from \"../_models/Pagination\";\r\n\r\nexport function getPaginationResult<T>(url: string , params : HttpParams , http: HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n    return http.get<T>(url , {observe: 'response' , params}).pipe(\r\n      map(response => {\r\n        //console.log(response);\r\n        paginatedResult.result = response.body; // tra ve mot Pagination.result cho client ts\r\n       // console.log(response.body);\r\n        if(response.headers.get('Pagination') !== null ){\r\n           //parse Json va gán dữ liệu vào InterFace pageSize ,pageNumber v...v\r\n//paginatedResult.pagination = {currentPage: 1, itemsPerPage: 5, totalItems: 3, totalPages: 1}\r\n         paginatedResult.pagination = JSON.parse(response.headers.get('pagination'));   \r\n         //console.log(paginatedResult.pagination) ;\r\n        }       \r\n        return paginatedResult;\r\n      })\r\n    )\r\n  }\r\n\r\n  export function getPaginationHeaders(pageNumber: number , pageSize: number ) {\r\n    // gán giá trị và đưa vào router của http Api của trình duyệt nhu la tham số\r\n    let params = new HttpParams(); \r\n    params = params.append('pageNumber' , pageNumber.toString());\r\n    params = params.append('pageSize' , pageSize.toString());\r\n    return params;\r\n    // return this.httpClient.get<repos[]>(this.baseURL + 'users/' + userName + '/repos', {params});\r\n  }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n        <tab heading = \"User Manager\" *appHasRole = '[\"Admin\"]' >\n            <div class=\"container\">\n                <app-user-management></app-user-management>\n            </div>\n        </tab>\n        <tab heading = \"Photo Manager\" *appHasRole = '[\"Admin\" , \"Moderator\"]' >\n            <div class=\"container\">\n               <app-photo-management></app-photo-management>\n            </div>\n        </tab>\n    </tabset>\n</div>\n","import { EventEmitter } from '@angular/core';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-role-modals',\n  templateUrl: './role-modals.component.html',\n  styleUrls: ['./role-modals.component.css']\n})\nexport class RoleModalsComponent implements OnInit {\n \n  // @Input() updateSelectedRoles = new EventEmitter();\n  updateSelectedRoles = new Subject<Irole[]>();\n  user: User;  \n  roles:Irole[] = [];\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n    \n  }\n  updateRoles() {\n    //truyền ngược cái roles cho user-management component đã subscribe nó \n    this.updateSelectedRoles.next(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\ninterface  Irole {\n  name?: string;\n  value?: string;\n  checked?: boolean;\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n      <div class=\"form-check\" *ngFor=\"let role of roles\">\n          <input type=\"checkbox\"\n              class=\"form-check-input\"\n              [checked]=\"role.checked\"\n              value=\"role.name\"\n              (change)=\"role.checked = !role.checked\"\n              [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n          >\n          <label>{{role.name}}</label>\n      </div>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n</div>\n","import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { MemberUpdate } from 'src/app/_models/memberUpdate';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_service/account.service';\nimport { MembersService } from 'src/app/_service/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  user: User; // username va Token co duoc sau khi login\n  member: Member ; // Schema AppUser mô tả trong Database\n  // xac nhan co muon thoat khoi man hinh khi form dang thay doi\n  @HostListener('window:beforeunload' , ['$event']) onBeforeUnload($event: any) {\n    $event.returnValue = true;\n  }\n\n  constructor(private accountService: AccountService , \n    private memberService: MembersService ,\n    private toast: ToastrService\n    ) { }\n\n  ngOnInit(): void {\n   \n    this.getMember();\n  }\n  // get User\n  getUser() {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user =>\n      this.user = user\n      );\n  }\n  // su dung UserName trong User de lay ra Member theo username\n  getMember() {\n    this.getUser(); // lay ra User , de su dung username trong User\n    this.memberService.getMember(this.user.username).pipe(take(1)).subscribe(\n      member => this.member = member\n    );\n  }\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(val => {\n      this.toast.success('Profile update successful');\n      // reset form nay xac nhan la FROM o trang thai DA NHAN NUT SAVE \n      this.editForm.reset(this.member);\n    });\n  }\n}\n","<div class=\"row\" *ngIf = \"member\">\n    \n    <div class=\"col-4\">\n        <h1> your Profile</h1>\n    </div>\n\n    <div class=\"col-8\"  >\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n            <Strong>Infomation\n                your have made change - Any Unsave changes will be lost \n            </Strong>\n        </div>\n    </div>\n\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div class=\"mb-2\"  >\n                    <i class=\"fa fa-user-circle text-success\"></i> Online now\n                </div>\n                <div>\n                    <strong>Location:</strong>\n                    <p>{{member.city}} {{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Age:</strong>\n                    <p>{{member.age}}</p>\n                </div>\n                <div>\n                    <strong>Last Active:</strong>\n                    <p>{{member.lastActive | timeago}}</p>\n                </div>\n                <div>\n                    <strong>Member since:</strong>\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                    <button [disabled] = \"!editForm.dirty\" type=\"submit\" form=\"editFormReferenceButton\"  class=\"btn btn-success btn-block\">Save Change</button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\">\n            <tab heading='About {{member.knownAs}}'>\n                <form #editForm=\"ngForm\" id=\"editFormReferenceButton\" (ngSubmit)=\"updateMember()\">\n                    <h4>Description</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Looking for</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Interests</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Location Details: </h4>\n                    <div class=\"form-inline\">\n                        <label for=\"city\">City: </label>\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\n                        <label for=\"city\">Country: </label>\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\n                    </div>\n                </form>\n               \n            </tab>\n            <tab heading='Edit Photos'>\n                 <app-photo-editor [member]=\"member\"></app-photo-editor>\n            </tab>\n        </tabset>\n    </div>\n    \n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_service/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n// CanDeactivate  cho phép chúng ta có quyết định có rời Route hay ko\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n  constructor(private confirm: ConfirmService) {}\n\n  canDeactivate(component: MemberEditComponent ): Observable<boolean> | boolean {\n    if(component.editForm.dirty) {\n        //    return confirm(\"du lieu dang thay doi , ban co muon thoat nhung khong save khong ?\")\n        // canDeactivate tự thực thi Obsevable\n        return this.confirm.confirm(\"Confirm\" , \"do you want to do that ?\");\n    }\n    return true;\n  }\n  \n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  title: string; \n  message: string;\n  btnOkText: string\n  btnCanceText: string;\n  result: boolean;\n  // bsModelRef sẽ giúp chúng ta truy xuất và truyền dữ liệu title , message....(khởi tạo trong service) \n  //và lấy Result (khởi tạo trong component) qua lại giữa Sevice và Component\n  constructor(public bsModelRef: BsModalRef) { } \n\n  ngOnInit(): void {\n  }\n  confirm() {\n    this.result = true ;\n    this.bsModelRef.hide();\n  }\n  decline() {\n    this.result = false;\n    this.bsModelRef.hide();\n  }\n\n  // openModal(template: TemplateRef<any>) {\n  //   this.bsModelRef = this.bsModalService.show(template, {class: 'modal-sm'})\n  // }\n\n}\n","<!-- <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Open modal</button> -->\n\n<pre class=\"card card-block card-header\">{{message}}</pre>\n<!-- <ng-template #template> -->\n  <div class=\"modal-body text-center\">\n    <p>Do you want to confirm?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\" >{{btnOkText}}</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\" >{{btnCanceText}}</button>\n  </div>\n<!-- </ng-template> -->","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { TestErrorComponent } from './errors/test-error/test-error.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AdminGuard } from './_guards/admin.guard';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\n\nconst routes: Routes = [\n  {path:'' , component: HomeComponent},\n\n  {\n    path:'',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard], // Guard này yêu cầu phải đăng nhập\n    children: [\n      {path:'lists' , component: ListsComponent},\n      {path:'members' , component: MemberListComponent } , //, canActivate: [AuthGuard]},\n      {path:'members/:username' , component: MemberDetailComponent , resolve: {member: MemberDetailedResolver}},\n      {path:'member/:edit' , component: MemberEditComponent , canDeactivate: [PreventUnsavedChangesGuard]},\n      {path:'messages' , component: MessagesComponent},\n      // AdminGuard // Guard này yêu cầu Adimin Router phải có User là Admin hoặc Moderator\n      {path:'admin' , component: AdminPanelComponent , canActivate: [AdminGuard]},\n    ]\n  },\n  {path:'error' , component: TestErrorComponent},\n  {path:'not-found' , component: NotFoundComponent},\n  {path:'server-error' , component: ServerErrorComponent},\n  {path:'**' , component: NotFoundComponent , pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}